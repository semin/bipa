<div id="home">
  <span class="main_title">Welcome to BIPA 1.0 release</span>
  <div id="home_intro" class="blue_link">
    <p>
    BIPA is a protein-nucleic acid interaction database, especially focusing on structural and functional restraints on nucleic acid-binding protein families and their relationships with mutations such nsSNPs. As of <%= Time.now.strftime("%A %d %b %Y") %>, there are <%= link_to Structure.untainted.count, structures_path %> protein-nucleic acid <%= link_to "PDB", "http://www.rcsb.org" %> complexes, <%= link_to ScopDomain.rpall.count, scops_path %> <%= link_to "SCOP", "http://scop.mrc-lmb.cam.ac.uk/scop/index.html" %> domains, and <%= DomainInterface.all.count %> domain-nucleic acid interfaces in BIPA.
    </p>
    <p>
    At the SCOP family level, a representative set of structures is selected and aligned using <%= link_to "BATON", "http://www-cryst.bioc.cam.ac.uk/COMPARER/" %>, and the structural alignments were further annotated using <%= link_to "JOY", "http://tardis.nibio.go.jp/joy/" %> to detect specific local environments of amino acids. Then, environment-specific substitution tables (<%= link_to "ESSTs", "http://www-cryst.bioc.cam.ac.uk/ESST" %>) were generated using <%= link_to "EGOR", "http://www-cryst.bioc.cam.ac.uk/egor" %> with an extended environment feature definition including atomic interactions between amino acids and nucleic acids to understand the patterns of amino acid substitutions under the functional restraints along with structural ones.
    </p>
    <p>
    Furthermore, by relating BIPA to other in-house databases, DoubleMap and Requiem, nsSNPs were mapped onto the nucleic acid-binding proteins to provide potential candidates of mutations which might be affecting protein-nucleic acid interactions.
    </p>
  </div>

  <span class="main_title">Recent News:</span>
  <div id="home_news">
    <ul class="news">
      <li>
        Initial Release! (10 Feb 2008)
      </li>
    </ul>
  </div>
</div>

<div id="brief_stats">
  <span class="main_title">Brief Statistics:</span>
  <table class="brief_stats">
    <tr>
      <th class="center">Type</th>
      <th class="center">Count</th>
    </tr>
    <tr>
      <th>Protein-DNA Complexes</th>
      <td><%= Structure.untainted.select { |s| s.dna_chains.count > 0}.count %></td>
    </tr>
    <tr>
      <th>Protein-RNA Complexes</th>
      <td><%= Structure.untainted.select { |s| s.rna_chains.count > 0}.count %></td>
    </tr>
    <tr>
      <th>DNA-binding SCOP domains</th>
      <td><%= DomainDnaInterface.count %></td>
    </tr>
    <tr>
      <th>RNA-binding SCOP domains</th>
      <td><%= DomainRnaInterface.count %></td>
    </tr>
    <tr>
      <th>nsSNPs found in nucleic acid-binding proteins</th>
      <td>XXX</td>
    </tr>
    <tr>
      <th>nsSNPs found in Protein-DNA interfaces</th>
      <td>XXX</td>
    </tr>
    <tr>
      <th>nsSNPs found in Protein-RNA interfaces</th>
      <td>XXX</td>
    </tr>
  </table>

  <table class="brief_stats">
    <tr>
      <th class="center">Property</th>
      <th class="center" width="120px">DNA interface</th>
      <th class="center" width="120px">RNA interface</th>
    </tr>
    <tr>
      <th>Average ASA</th>
      <td>
        <%= "%.2f" % DomainDnaInterface.find(:all, :select => "asa").map(&:asa).to_stats_array.mean %> &Aring;<sup>2</sup><br />
        (&plusmn; <%= "%.2f" % DomainDnaInterface.find(:all, :select => "asa").map(&:asa).to_stats_array.stddev %> &Aring;<sup>2</sup>)
      </td>
      <td>
        <%= "%.2f" % DomainRnaInterface.find(:all, :select => "asa").map(&:asa).to_stats_array.mean %> &Aring;<sup>2</sup><br />
        (&plusmn; <%= "%.2f" % DomainRnaInterface.find(:all, :select => "asa").map(&:asa).to_stats_array.stddev %> &Aring;<sup>2</sup>)
      </td>
    </tr>
    <tr>
      <th>Polarity</th>
      <td>
        <%= "%.2f" % DomainDnaInterface.find(:all, :select => "polarity").map(&:polarity).to_stats_array.mean %>
        (&plusmn; <%= "%.2f" % DomainDnaInterface.find(:all, :select => "polarity").map(&:polarity).to_stats_array.stddev %>)
      </td>
      <td>
        <%= "%.2f" % DomainRnaInterface.find(:all, :select => "polarity").map(&:polarity).to_stats_array.mean %>
        (&plusmn; <%= "%.2f" % DomainRnaInterface.find(:all, :select => "polarity").map(&:polarity).to_stats_array.stddev %>)
      </td>
    </tr>
    <tr>
      <th>No. of hydrogen bonds</th>
      <td>
        <%= "%.2f" % DomainDnaInterface.find(:all, :select => "hbonds_count").map(&:hbonds_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainDnaInterface.find(:all, :select => "hbonds_count").map(&:hbonds_count).to_stats_array.stddev %>)
      </td>
      <td>
        <%= "%.2f" % DomainRnaInterface.find(:all, :select => "hbonds_count").map(&:hbonds_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainRnaInterface.find(:all, :select => "hbonds_count").map(&:hbonds_count).to_stats_array.stddev %>)
      </td>
    </tr>
    <tr>
      <th>No. of water-mediated hydrogen bonds</th>
      <td>
        <%= "%.2f" % DomainDnaInterface.find(:all, :select => "whbonds_count").map(&:whbonds_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainDnaInterface.find(:all, :select => "whbonds_count").map(&:whbonds_count).to_stats_array.stddev %>)
      </td>
      <td>
        <%= "%.2f" % DomainRnaInterface.find(:all, :select => "whbonds_count").map(&:whbonds_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainRnaInterface.find(:all, :select => "whbonds_count").map(&:whbonds_count).to_stats_array.stddev %>)
      </td>
    </tr>
    <tr>
      <th>No. of van der Waals contacts</th> 
      <td>
        <%= "%.2f" % DomainDnaInterface.find(:all, :select => "vdw_contacts_count").map(&:vdw_contacts_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainDnaInterface.find(:all, :select => "vdw_contacts_count").map(&:vdw_contacts_count).to_stats_array.stddev %>)
      </td>
      <td>
        <%= "%.2f" % DomainRnaInterface.find(:all, :select => "vdw_contacts_count").map(&:vdw_contacts_count).to_stats_array.mean %> 
        (&plusmn; <%= "%.2f" % DomainRnaInterface.find(:all, :select => "vdw_contacts_count").map(&:vdw_contacts_count).to_stats_array.stddev %>)
      </td>
    </tr>
  </table>
</div>
